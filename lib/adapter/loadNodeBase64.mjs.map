{"version":3,"file":"loadNodeBase64.mjs","sources":["../../src/adapter/loadNodeBase64.ts"],"sourcesContent":["import canvasModule from 'canvas';\r\nimport { extensions, ExtensionType, Texture, TextureSource, utils } from '@pixi/core';\r\nimport { NodeCanvasElement } from './NodeCanvasElement';\r\n\r\nimport type { LoaderParser, ResolvedAsset } from '@pixi/assets';\r\n\r\nconst { loadImage } = canvasModule;\r\nconst validMimes = ['image/png', 'image/jpg', 'image/jpeg', 'image/svg'];\r\n\r\nfunction isSupportedDataURL(url: string): boolean\r\n{\r\n    const match = url.match(/^data:([^;]+);base64,/);\r\n\r\n    if (!match) return false;\r\n\r\n    const mimeType = match[1];\r\n\r\n    return validMimes.includes(mimeType);\r\n}\r\n\r\n/** loads our textures into a node canvas */\r\nexport const loadNodeBase64 = {\r\n    extension: ExtensionType.LoadParser,\r\n\r\n    test(url: string): boolean\r\n    {\r\n        return isSupportedDataURL(url);\r\n    },\r\n\r\n    async load(url: string, asset: ResolvedAsset): Promise<Texture>\r\n    {\r\n        const image = await loadImage(url);\r\n        const canvas = new NodeCanvasElement(image.width, image.height);\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx?.drawImage(image as unknown as CanvasImageSource, 0, 0);\r\n        const texture = Texture.from(canvas as unknown as TextureSource, {\r\n            resolution: utils.getResolutionOfUrl(url),\r\n            ...asset.data\r\n        });\r\n\r\n        return texture;\r\n    },\r\n\r\n    unload(texture: Texture): void\r\n    {\r\n        texture.destroy(true);\r\n    }\r\n} as LoaderParser<Texture>;\r\n\r\nextensions.add(loadNodeBase64);\r\n"],"names":[],"mappings":";;;;AAMA,MAAM,EAAE,WAAc,GAAA,YAAA,CAAA;AACtB,MAAM,UAAa,GAAA,CAAC,WAAa,EAAA,WAAA,EAAa,cAAc,WAAW,CAAA,CAAA;AAEvE,SAAS,mBAAmB,GAC5B,EAAA;AACI,EAAM,MAAA,KAAA,GAAQ,GAAI,CAAA,KAAA,CAAM,uBAAuB,CAAA,CAAA;AAE/C,EAAI,IAAA,CAAC,OAAc,OAAA,KAAA,CAAA;AAEnB,EAAM,MAAA,QAAA,GAAW,MAAM,CAAC,CAAA,CAAA;AAExB,EAAO,OAAA,UAAA,CAAW,SAAS,QAAQ,CAAA,CAAA;AACvC,CAAA;AAGO,MAAM,cAAiB,GAAA;AAAA,EAC1B,WAAW,aAAc,CAAA,UAAA;AAAA,EAEzB,KAAK,GACL,EAAA;AACI,IAAA,OAAO,mBAAmB,GAAG,CAAA,CAAA;AAAA,GACjC;AAAA,EAEA,MAAM,IAAK,CAAA,GAAA,EAAa,KACxB,EAAA;AACI,IAAM,MAAA,KAAA,GAAQ,MAAM,SAAA,CAAU,GAAG,CAAA,CAAA;AACjC,IAAA,MAAM,SAAS,IAAI,iBAAA,CAAkB,KAAM,CAAA,KAAA,EAAO,MAAM,MAAM,CAAA,CAAA;AAC9D,IAAM,MAAA,GAAA,GAAM,MAAO,CAAA,UAAA,CAAW,IAAI,CAAA,CAAA;AAElC,IAAK,GAAA,EAAA,SAAA,CAAU,KAAuC,EAAA,CAAA,EAAG,CAAC,CAAA,CAAA;AAC1D,IAAM,MAAA,OAAA,GAAU,OAAQ,CAAA,IAAA,CAAK,MAAoC,EAAA;AAAA,MAC7D,UAAA,EAAY,KAAM,CAAA,kBAAA,CAAmB,GAAG,CAAA;AAAA,MACxC,GAAG,KAAM,CAAA,IAAA;AAAA,KACZ,CAAA,CAAA;AAED,IAAO,OAAA,OAAA,CAAA;AAAA,GACX;AAAA,EAEA,OAAO,OACP,EAAA;AACI,IAAA,OAAA,CAAQ,QAAQ,IAAI,CAAA,CAAA;AAAA,GACxB;AACJ,EAAA;AAEA,UAAA,CAAW,IAAI,cAAc,CAAA;;;;"}